# Configuration for a Winterfell OCP node
# and it uses LinuxBoot, not coreboot.
CONFIG_LINUXBOOT=y
CONFIG_LINUXBOOT_ROM=blobs/winterfell.rom
CONFIG_LINUX_CONFIG=config/linux-linuxboot.config

# If you want to build with the go-based u-root instead of Heads
CONFIG_UROOT ?= y

ifeq "$(CONFIG_UROOT)" "y"
# The busybox will likely be redundant and can be trimmed for space.
CONFIG_BUSYBOX=n
CONFIG_ZLIB=n
CONFIG_MUSL=n
else
# These don't fit if u-root is turned on
#CONFIG_CRYPTSETUP=y
#CONFIG_FLASHROM=y
CONFIG_FLASHTOOLS=y
CONFIG_GPG=y
CONFIG_KEXEC=y
CONFIG_UTIL_LINUX=y
#CONFIG_LVM2=y
#CONFIG_MBEDTLS=y
CONFIG_PCIUTILS=y
CONFIG_POPT=y
#CONFIG_QRENCODE=y
#CONFIG_TPMTOTP=y
CONFIG_DROPBEAR=y
endif

# Linux modules will still be linked into the u-root tree
CONFIG_LINUX_USB_EHCI=y
CONFIG_LINUX_USB_STORAGE=y
#CONFIG_LINUX_MLX4=y
CONFIG_LINUX_ATA=y
CONFIG_LINUX_AHCI=y
#CONFIG_LINUX_E1000E=y
#CONFIG_LINUX_NVME=y

export CONFIG_BOOTSCRIPT=/bin/generic-init
export CONFIG_TPM=n
export CONFIG_BOOT_REQ_HASH=n
export CONFIG_BOOT_REQ_ROLLBACK=n
export CONFIG_BOOT_DEV="/dev/sda1"
export CONFIG_USB_BOOT_DEV="/dev/sdb1"

#$(build)/$(BOARD)/linuxboot.rom: $(build)/$(linuxboot_dir)/

# No 0x on these since the flasher doesn't handle that
dxe_offset := 860000
dxe_size := 6a0000
flash-dxe: $(build)/$(BOARD)/linuxboot.rom
	( echo u$(dxe_offset) $(dxe_size) ; \
	pv $(build)/linuxboot-git/build/$(BOARD)/dxe.vol \
	) > /dev/ttyACM0

flash: $(build)/$(BOARD)/linuxboot.rom
	( echo u0 1000000 ; \
	pv $< \
	) > /dev/ttyACM0
