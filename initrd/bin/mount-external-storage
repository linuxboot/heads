#!/bin/sh
# Mount a external storage device
. /etc/functions

unlock_remap_luks_dev()
{
  cryptsetup isLuks $EXTERNAL_STORAGE_MOUNT_DEVICE
  if [ $(echo $?) == 0 ]; then
    echo -e "\n\nExternal Storage drive $EXTERNAL_STORAGE_MOUNT_DEVICE is encrypted.\n"
    
    cryptsetup luksOpen $EXTERNAL_STORAGE_MOUNT_DEVICE external_storage_dev
    
    if [ $(echo $?) == 0 ]; then
      EXTERNAL_STORAGE_MOUNT_DEVICE="/dev/mapper/external_storage_dev"
    else
      echo -e "\n\nFailed to unlock External Storage drive $EXTERNAL_STORAGE_MOUNT_DEVICE with provided passphrase.\n"
    fi
  fi
}

enable_usb
enable_mmc

if ! lsmod | grep -q usb_storage; then
  count=$(ls /dev/sd* /dev/mmc* 2>/dev/null | wc -l)
  timeout=0
  echo "Scanning for external storage devices..."
  insmod /lib/modules/usb-storage.ko >/dev/null 2>&1 \
  || die "usb_storage: module load failed"
  while [[ $count == $(ls /dev/sd* /dev/mmc* 2>/dev/null | wc -l) ]]; do 
    [[ $timeout -ge 4 ]] && break
    sleep 1
    timeout=$(($timeout+1))
  done
fi

if [ ! -d /media ]; then
  mkdir /media
fi

stat -c %N /sys/block/sd* /sys/block/mmcblk0* 2>/dev/null | grep -e usb -e mmc | cut -f1 -d ' ' | sed "s/[']//g;s|/sys/block|/dev|" > /tmp/external_block_devices
if [ -z `cat /tmp/external_block_devices` ]; then
  if [ -x /bin/whiptail ]; then
    whiptail --title 'External Storage Drive Missing' \
      --msgbox "Insert your External Storage drive and press Enter to continue." 16 60
  else
    echo "+++ External Storage Drive Missing! Insert your External Storage drive and press Enter to continue."
    read
  fi
  sleep 1
  stat -c %N /sys/block/sd* /sys/block/mmcblk0* 2>/dev/null | grep -e usb -e mmc | cut -f1 -d ' ' | sed "s/[']//g;s|/sys/block|/dev|" > /tmp/external_block_devices
  if [ -z `cat /tmp/external_block_devices` ]; then
    if [ -x /bin/whiptail ]; then
      whiptail $BG_COLOR_ERROR --title 'External Storage Drive Missing' \
        --msgbox "Insert your External Storage drive and press Enter to continue." 16 60
    else
      echo "!!! ERROR: External Storage Drive Missing! Aborting mount. Press Enter to continue."
    fi
    exit 1
  fi
fi

EXTERNAL_STORAGE_MOUNT_DEVICE=""
# Check for the common case: a single External disk with one partition
if [ `cat /tmp/external_block_devices | wc -l` -eq 1 ]; then
  EXTERNAL_STORAGE_BLOCK_DEVICE=`cat /tmp/external_block_devices`
  # Subtract out block device
  let EXTERNAL_STORAGE_NUM_PARTITIONS=`ls -1 ${EXTERNAL_STORAGE_BLOCK_DEVICE}* | wc -l`-1
  if [ ${EXTERNAL_STORAGE_NUM_PARTITIONS} -eq 0 ]; then
    EXTERNAL_STORAGE_MOUNT_DEVICE=${EXTERNAL_STORAGE_BLOCK_DEVICE}
  elif [ ${EXTERNAL_STORAGE_NUM_PARTITIONS} -eq 1 ]; then
    EXTERNAL_STORAGE_MOUNT_DEVICE=`ls -1 ${EXTERNAL_STORAGE_BLOCK_DEVICE}* | tail -n1`
  fi
fi
# otherwise, let the user pick
if [ -z ${EXTERNAL_STORAGE_MOUNT_DEVICE} ]; then
  > /tmp/external_storage_disk_list
  for i in `cat /tmp/external_block_devices`; do
    # remove block device from list if numeric partitions exist, since not bootable
    let EXTERNAL_STORAGE_NUM_PARTITIONS=`ls -1 $i* | wc -l`-1
    if [ ${EXTERNAL_STORAGE_NUM_PARTITIONS} -eq 0 ]; then
      echo $i $(blkid | grep $i | grep -o 'LABEL=".*"' | cut -f2 -d '"') >> /tmp/external_storage_disk_list
    else
      for j in $(ls $i* | tail -${EXTERNAL_STORAGE_NUM_PARTITIONS}); do
        echo $j $(blkid | grep $j | grep -o 'LABEL=".*"' | cut -f2 -d '"') >> /tmp/external_storage_disk_list
      done
    fi
  done

  if [ -x /bin/whiptail ]; then
    MENU_OPTIONS=""
    n=0
    while read option
    do
      n=`expr $n + 1`
      option=$(echo $option | tr " " "_")
      MENU_OPTIONS="$MENU_OPTIONS $n ${option}"
    done < /tmp/external_storage_disk_list

    MENU_OPTIONS="$MENU_OPTIONS a Abort"
    whiptail --clear --title "Select your External disk" \
      --menu "Choose your External disk [1-$n, a to abort]:" 20 120 8 \
      -- $MENU_OPTIONS \
      2>/tmp/whiptail

    option_index=$(cat /tmp/whiptail)
  else
    echo "+++ Select your External disk:"
    n=0
    while read option
    do
      n=`expr $n + 1`
      echo "$n. $option"
    done < /tmp/external_storage_disk_list

    read \
      -p "Choose your External disk [1-$n, a to abort]: " \
      option_index
  fi

  if [ "$option_index" = "a" ]; then
    exit 5
  fi
  EXTERNAL_STORAGE_MOUNT_DEVICE=`head -n $option_index /tmp/external_storage_disk_list | tail -1 | sed 's/\ .*$//'`
fi

unlock_remap_luks_dev
if [ "$1" = "rw" ]; then
  mount -o rw $EXTERNAL_STORAGE_MOUNT_DEVICE /media
else
  mount -o ro $EXTERNAL_STORAGE_MOUNT_DEVICE /media
fi
