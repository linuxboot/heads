#!/bin/sh
# Update the Tails live directory signatures
set -o pipefail
. /etc/functions

USB_DIR="$1"
if [ -z "$USB_DIR" ]; then
	die "Usage: $0 /media "
fi

LIVE_DIR="$USB_DIR/live"
if ! [ -d "$LIVE_DIR" ]; then
	die "Tails live directory not found at $USB_DIR"
fi

# setup the USB so we can reach the GPG card
if ! lsmod | grep -q ehci_hcd; then
	insmod /lib/modules/ehci-hcd.ko \
	|| die "ehci_hcd: module load failed"
fi
if ! lsmod | grep -q ehci_pci; then
	insmod /lib/modules/ehci-pci.ko \
	|| die "ehci_pci: module load failed"
fi
if ! lsmod | grep -q xhci_hcd; then
	insmod /lib/modules/xhci-hcd.ko \
	|| die "ehci_hcd: module load failed"
fi
if ! lsmod | grep -q xhci_pci; then
	insmod /lib/modules/xhci-pci.ko \
	|| die "ehci_pci: module load failed"
	sleep 2
fi

gpg --card-status \
|| die "gpg card read failed"

KERNEL="$LIVE_DIR/vmlinuz2"
if ! [ -f "$KERNEL" ]; then
	die "Tails kernel missing"
fi
INITRD="$LIVE_DIR/initrd2.img"
if ! [ -f "$INITRD" ]; then
	die "Tails initram missing"
fi
MODULE="$LIVE_DIR/Tails.module"
if ! [ -f "$MODULE" ]; then
	die "Tails module missing"
fi

BOOT_HASHES="$LIVE_DIR/boot.hashes"

# if the /boot.hashes file already exists, read the TPM counter ID
# from it.
if [ -r "$BOOT_HASHES" ]; then
	TPM_COUNTER=`grep counter- "$BOOT_HASHES" | cut -d- -f2`
else
	warn "$BOOT_HASHES does not exist; creating new TPM counter"
	read -s -p "TPM Owner password: " tpm_password
	echo
	tpm counter_create \
		-pwdo "$tpm_password" \
		-pwdc '' \
		-la 2098540983 \
	| tee /tmp/counter \
	|| die "Unable to create TPM counter"
	TPM_COUNTER=`cut -d: -f1 < /tmp/counter`
fi

if [ -z "$TPM_COUNTER" ]; then
	die "$BOOT_HASHES: TPM Counter not found?"
fi

mount -o rw,remount $USB_DIR \
|| die "Could not remount $USB_DIR"

tpm counter_increment -ix "$TPM_COUNTER" -pwdc '' \
	| tee /tmp/counter-$TPM_COUNTER \
|| die "Counter increment failed"

sha256sum \
	"$KERNEL" \
	"$INITRD" \
	"$MODULE" \
	"/tmp/counter-$TPM_COUNTER" \
| tee "$BOOT_HASHES"

while read FILE; do
	if ! [ -f "$LIVE_DIR/$FILE" ]; then
		die "Tails module file missing: $FILE"
	fi
	sha256sum $LIVE_DIR/$FILE \
	| tee -a "$BOOT_HASHES"
done < "$MODULE"

for tries in 1 2 3; do
	if gpg --detach-sign -a "$BOOT_HASHES"; then
		mount -o ro,remount $USB_DIR
		exit 0
	fi
done

warn "$BOOT_HASHES: Unable to sign boot hashes"
mount -o ro,remount $USB_DIR
exit 1
