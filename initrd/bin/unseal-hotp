#!/bin/sh
# Retrieve the sealed file and counter from the NVRAM, unseal it and compute the hotp

. /etc/functions

# Store counter in file instead of TPM for now, as it conflicts with Heads
# config TPM counter as TPM 1.2 can only increment one counter between reboots
# get current value of HOTP counter in TPM, create if absent

HOTP_SEALED="/tmp/secret/hotp.sealed"
HOTP_SECRET="/tmp/secret/hotp.key"
HOTP_COUNTER="/boot/kexec_hotp_counter"

# Mount local disk if it is not already mounted
if ! grep -q /boot /proc/mounts ; then
	mount -o ro /boot \
	|| die "Unable to mount /boot"
fi

counter_value=$(cat $HOTP_COUNTER)

if [ "$counter_value" == "" ]; then
  die "Unable to read HOTP counter"
fi

tpm nv_readvalue \
	-in 4d47 \
	-sz 312 \
	-of "$HOTP_SEALED" \
|| die "Unable to retrieve sealed file from TPM NV"

tpm unsealfile  \
	-hk 40000000 \
	-if "$HOTP_SEALED" \
	-of "$HOTP_SECRET" \
|| die "Unable to unseal HOTP secret"

shred -n 10 -z -u "$HOTP_SEALED" 2> /dev/null

if ! hotp $counter_value < "$HOTP_SECRET"; then
	shred -n 10 -z -u "$HOTP_SECRET" 2> /dev/null
	die 'Unable to compute HOTP hash?'
fi

shred -n 10 -z -u "$HOTP_SECRET" 2> /dev/null

mount -o remount,rw /boot

counter_value=`expr $counter_value + 1`
echo $counter_value > $HOTP_COUNTER \
|| die "Unable to create hotp counter file"

mount -o remount,ro /boot

exit 0
