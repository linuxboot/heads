#!/bin/sh
# Reencrypt LUKS container and change Disk Recovery Key associated passphrase (Slot 0: main slot)

. /etc/functions
. /tmp/config

select_luks_container()
{
  if [ -s /boot/kexec_key_devices.txt ]; then
    LUKS=$(cut -d ' ' -f1 /boot/kexec_key_devices.txt)
  else
    #generate a list of devices to choose from that contain a LUKS header
      blkid | cut -d ':' -f 1 | while read device;do cryptsetup isLuks $device;if [ $(echo $?) == 0 ]; then echo $device;fi; done | sort > /tmp/luks_devices.txt
      file_selector "/tmp/luks_devices.txt" "Select LUKS container device"
    if [ "$FILE" == "" ]; then
      return
    else
      LUKS=$FILE
      mount_boot
      mount -o remount,rw /boot
      echo "$LUKS $(cryptsetup luksUUID $LUKS)" > /boot/kexec_key_devices.txt
      mount -o remount,ro /boot
    fi
  fi
}

if [ $reownership_state = "luks_reencryption" ]; then 
  #if no USB oem-privisioning file provides actual Disk Recovery Key
  if [ -z "$oem_luks_actual_Disk_Recovery_Key" ]; then
    whiptail --title 'Reencrypt actual LUKS container with a new user selected strong passphrase?' \
      --msgbox "This will replace the actual Disk Recovery Key.\n\nThe passphrase associated with this key will be asked to the user in the\n following conditions:\n1-Every boot if no Disk unlock key was added to the TPM\n2-If the TPM fails (Hardware failure)\n3-If the firmware has been tampered with/upgraded/modified by the user\n\nThis process requires you to type the actual Disk Recovery Key passphrase\nand will delete the actual Disk unlock key released by the TPM into\nLUKS (slot 1) if present.\n\nAt the next prompt, you may be asked to select which file corresponds to\nthe LUKS device container. Normally, it should be /dev/sda2.\n\nHit Enter to continue." 30 90
    select_luks_container
    whiptail --title 'Reencrypting LUKS container!' --msgbox \
      "Please enter current Disk Recovery Key passphrase (slot 0) to reencrypt\n LUKS container with a brand new encryption key\n\nHit Enter to continue." 30 60
    cryptsetup-reencrypt -B 32 --use-directio "$LUKS" --key-slot 0
  else
    #USB "oem-privisioning" file provides actual Disk Recovery Key
    echo -n "$oem_luks_actual_Disk_Recovery_Key" > /tmp/oem_luks_actual_Disk_Recovery_Key
    select_luks_container
    cryptsetup-reencrypt -B 32 --use-directio "$LUKS" --key-slot 0 --key-file /tmp/oem_luks_actual_Disk_Recovery_Key -h sha256
  fi
  if [ $(echo $?) -ne 0 ]; then
    whiptail --title 'Invalid LUKS Disk Recovery Key passphrase?' --msgbox \
      "The LUKS Disk Recovery Key password was provided to you by the OEM over\n secure communication channel.\n\nIf you previously changed it and do not remember it,\n you will have to reinstall OS from a USB drive.\n\nTo do so, place ISO file and its signature file on root of USB drive,\n and select Boot from USB\n\nHit Enter to continue." 30 60
    shred -n 10 -z -u /tmp/oem_luks_actual_Disk_Recovery_Key 2> /dev/null
    continue
  else
  #Successfully reencrypted LUKS container with current Disk Recovery Key passphrase. Write successful state in oem file
    if [ -e /boot/oem ];then
      mount -o remount,rw /boot
      echo "luks_reencrypted" >> /boot/oem
      reownership_state="luks_password_change"
      mount -o remount,ro /boot
      shred -n 10 -z -u /tmp/oem_luks_actual_Disk_Recovery_Key 2> /dev/null
    fi
  fi
  continue
fi

if [ $reownership_state == "luks_password_change" ]; then
  #if actual or new Disk Recovery Key is not provisioned by USB oem-provisioning file
  if [ -z "$oem_luks_actual_Disk_Recovery_Key" ] || [ -z "$oem_luks_new_Disk_Recovery_Key" ] ; then
    whiptail --title 'Changing LUKS Disk Recovery Key passphrase' --msgbox \
      "Please enter current Disk Recovery Key passphrase (slot 0).\nThen choose a strong passphrase of your own.\n\n**DICEWARE passphrase methodology is STRONGLY ADVISED.**\n\nHit Enter to continue" 30 60

    select_luks_container

    cryptsetup luksChangeKey "$LUKS" --key-slot 0 --tries 3
  else
    #if actual and new Disk Recovery Key is provisioned by USB oem-provisioning file
    select_luks_container
    echo -n "$oem_luks_new_Disk_Recovery_Key" > /tmp/oem_luks_new_Disk_Recovery_Key
    echo -n "$oem_luks_actual_Disk_Recovery_Key" > /tmp/oem_luks_actual_Disk_Recovery_Key
    cryptsetup luksChangeKey "$LUKS" --key-slot 0 --key-file=/tmp/oem_luks_actual_Disk_Recovery_Key /tmp/oem_luks_new_Disk_Recovery_Key
  fi
  if [ $(echo $?) -ne 0 ]; then
    whiptail --title 'Invalid LUKS passphrase?' --msgbox \
      "The LUKS Disk Recovery Key passphrase was provided to you by the OEM over\n secure communication channel.\n\nIf you previously changed it and do not remember it,\n you will have to reinstall OS from a USB drive.\nTo do so, put OS ISO file and it's signature file on root of USB drive,\n And select Boot from USB\n\nHit Enter to continue." 30 60
    shred -n 10 -z -u /tmp/oem_luks_new_Disk_Recovery_Key 2> /dev/null
    shred -n 10 -z -u /tmp/oem_luks_actual_Disk_Recovery_Key 2> /dev/null
    continue
  else
  #Successfully changed LUKS Disk Recovery Key passphrase. Write successful state in oem file
    if [ -e /boot/oem ];then
      mount -o remount,rw /boot
      echo "luks_passwd_changed" >> /boot/oem
      mount -o remount,ro /boot
      shred -n 10 -z -u /tmp/oem_luks_new_Disk_Recovery_Key 2> /dev/null
      shred -n 10 -z -u /tmp/oem_luks_actual_Disk_Recovery_Key 2> /dev/null
    fi
  fi
  continue
fi
