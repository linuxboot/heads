#To activate OEM reownership wizard, once testing OS boot with Disk Unlock Key passphrase,insert prepared sdcard in memory expension slot and do:
mount-sdcard && mount -o remount,rw /media && touch /media/oem-provisioning && mount -o remount,ro /media && mount /boot||true && mount -o remount,rw /boot && echo "oem_name=COMPANY NAME" > /boot/oem && echo "oem_provisioning_partition=/dev/mmcblk0p1" >> /boot/oem && mount -o remount,ro /boot && reboot
#remove invalid kexec.sig signed checksum file
mount /boot||true && mount -o remount,rw /boot && rm /boot/kexec.sig && mount -o remount,ro /boot
#Generate keys from GPG smartcard: 
usb-init && gpg --home=/.gnupg/ --card-edit
#Copy generated public key, private_subkey, trustdb and artifacts to external media for backup: 
mount-usb && mount -o remount,rw /media && mkdir -p /media/gpg_keys; gpg --export-secret-keys --armor email@address.com > /media/gpg_keys/private.key && gpg --export --armor email@address.com  > /media/gpg_keys/public.key && cp -r ./.gnupg/* /media/gpg_keys/ 2> /dev/null
#Insert public key and trustdb export into reproducible rom:
cbfs -o /media/coreboot.rom -a "heads/initrd/.gnupg/keys/public.key" -f /media/gpg_keys/public.key
#Flush changes to external media: 
mount -o,remount ro /media
#Flash modified reproducible rom with inserted public key and trustdb export from precedent step. Flushes actual rom's keys (-c: clean):
mount-usb && flash.sh -c /media/coreboot.rom
#Attest integrity of firmware as it is
seal-totp
#Sign a manually verified ISO with your GPG key so you can boot it from Heads
mount-usb && mount -o remount,rw /media && gpg --card-status && gpg --detach-sig /media/some.iso
#Verify Intel ME state:
cbmem --console | grep '^ME'
cbmem --console | less
