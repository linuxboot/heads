version: 2
jobs:
  build:
    docker:
      - image: debian:10
    steps:
      - run:
          name: Install dependencies
          command: |
            apt update
            apt install -y build-essential zlib1g-dev uuid-dev libdigest-sha-perl libelf-dev bc bzip2 bison flex git gnupg iasl m4 nasm patch python wget gnat cpio ccache pkg-config cmake libusb-1.0-0-dev autoconf texinfo ncurses-dev
      - checkout

      - run:
          name: git reset
          command: |
            git reset --hard "$CIRCLE_SHA1" \

      - run:
          name: Creating all modules and patches digest
          command: |
            find ./patches/ ./modules/ -type f | sort -h |xargs sha256sum > /tmp/all_modules_and_patches.sha256sums \

      - run:
          name: Creating musl-cross-make and musl-cross-make patches digest
          command: |
            find ./patches/musl-cross-* modules/musl-cross* -type f | sort -h | xargs sha256sum > /tmp/musl-cross_module_and_patches.sha256sums \


      - restore_cache:
          keys:
            #Restore existing cache for modules checksums validated to be exactly the same as in github current commit
            - heads-modules-and-patches-{{ checksum "/tmp/all_modules_and_patches.sha256sums" }}{{ .Environment.CACHE_VERSION }}
            #If precedent fails. Restore cache for musl-cross module checksum validated to be exactly the same as in github current commit
            - heads-cross-musl-{{ checksum "/tmp/musl-cross_module_and_patches.sha256sums" }}{{ .Environment.CACHE_VERSION }}

# linuxboot steps need something to pass in the kernel header path
# skipping for now
#      - run:
#          name: qemu-linuxboot-edk2
#          command: |
#            ./build/make-4.2.1/make \
#                CROSS=/cross/bin/x86_64-linux-musl- \
#                BOARD=qemu-linuxboot \
#                `/bin/pwd`/build/linuxboot-git/build/qemu/.configured \
#                # Run first to avoid too many processes
#
#      - run:
#          name: qemu-linuxboot
#          command: |
#            ./build/make-4.2.1/make \
#                CROSS=/cross/bin/x86_64-linux-musl- \
#                CPUS=4 \
#                V=1 \
#                BOARD=qemu-linuxboot \
#
#      - store-artifacts:
#          path: build/qemu-linuxboot/linuxboot.rom
#      - store-artifacts:
#          path: build/qemu-linuxboot/hashes.txt

      - run:
          name: qemu-coreboot
          command: |
            rm -rf build/qemu-coreboot/* build/log/* && make CPUS=4 \
                V=1 \
                BOARD=qemu-coreboot || (find ./build/ -name "*.log" -type f -mmin -1|while read log; do echo ""; echo '==>' "$log" '<=='; echo ""; cat $log;done; exit 1) \
          no_output_timeout: 3h
      - run:
          name: Output qemu-coreboot hashes
          command: |
             cat build/qemu-coreboot/hashes.txt \
      - run:
          name: Archiving build logs for qemu-coreboot
          command: |
             tar zcvf build/qemu-coreboot/logs.tar.gz build/log/*
      - store-artifacts:
          path: build/qemu-coreboot

      - save_cache:
          #Generate cache for the same musl-cross module definition if hash is not previously existing
          key: heads-cross-musl-{{ checksum "/tmp/musl-cross_module_and_patches.sha256sums" }}{{ .Environment.CACHE_VERSION }}
          paths:
            - crossgcc
            - build/musl-cross-*

      - save_cache:
          #Generate cache for the exact same modules definitions if hash is not previously existing
          key: heads-modules-and-patches-{{ checksum "/tmp/all_modules_and_patches.sha256sums" }}{{ .Environment.CACHE_VERSION }}
          paths:
            - packages
            - crossgcc
            - build
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
